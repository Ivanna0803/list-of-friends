{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = /*#__PURE__*/_createElementVNode(\"header\", null, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"My Friends\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_new_friend = _resolveComponent(\"new-friend\");\n  var _component_friend_contact = _resolveComponent(\"friend-contact\");\n  return _openBlock(), _createElementBlock(\"section\", null, [_hoisted_1, _createVNode(_component_new_friend, {\n    onAddContact: $options.addContact\n  }, null, 8 /* PROPS */, [\"onAddContact\"]), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.friends, function (friend) {\n    return _openBlock(), _createBlock(_component_friend_contact, {\n      key: friend.id,\n      id: friend.id,\n      name: friend.name,\n      \"phone-number\": friend.phone,\n      \"email-address\": friend.email,\n      \"is-favorite\": friend.isFavorite,\n      onToggleFavorite: $options.toggleFavoriteStatus,\n      onDelete: $options.deleteContact\n    }, null, 8 /* PROPS */, [\"id\", \"name\", \"phone-number\", \"email-address\", \"is-favorite\", \"onToggleFavorite\", \"onDelete\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_new_friend","onAddContact","$options","addContact","_Fragment","_renderList","$data","friends","friend","_createBlock","_component_friend_contact","key","id","name","phone","email","isFavorite","onToggleFavorite","toggleFavoriteStatus","onDelete","deleteContact"],"sources":["/Users/ivanka/projects/list-of-friends/src/App.vue"],"sourcesContent":["<template>\n  <section>\n    <header><h1>My Friends</h1></header>\n    <new-friend @add-contact=\"addContact\"></new-friend>\n    <ul>\n      <friend-contact\n        v-for=\"friend in friends\"\n        :key=\"friend.id\"\n        :id=\"friend.id\"\n        :name=\"friend.name\"\n        :phone-number=\"friend.phone\"\n        :email-address=\"friend.email\"\n        v-bind:is-favorite=\"friend.isFavorite\"\n        @toggle-favorite=\"toggleFavoriteStatus\"\n        @delete=\"deleteContact\"\n      >\n      </friend-contact>\n    </ul>\n  </section>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      friends: [\n        {\n          id: \"manuel\",\n          name: \"Manuel Lorens\",\n          phone: \"0123 456 789\",\n          email: \"manuel@gmail.com\",\n          isFavorite: true,\n        },\n        {\n          id: \"julia\",\n          name: \"Julia Johns\",\n          phone: \"0123 666 991\",\n          email: \"julia@gmail.com\",\n          isFavorite: false,\n        },\n        {\n          id: \"Iva\",\n          name: \"Iva Serg\",\n          phone: \"0123 666 666\",\n          email: \"iva@gmail.com\",\n          isFavorite: false,\n        },\n      ],\n    };\n  },\n  methods: {\n    toggleFavoriteStatus(friendId) {\n      const identifiedFriend = this.friends.find(\n        (friend) => friend.id === friendId\n      );\n      identifiedFriend.isFavorite = !identifiedFriend.isFavorite;\n    },\n    addContact(name, phone, email) {\n      const newFriendContact = {\n        id: new Date().toISOString(),\n        name: name,\n        phone: phone,\n        email: email,\n        isFavorite: false,\n      };\n      this.friends.push(newFriendContact);\n    },\n    deleteContact(friendId) {\n      this.friends = this.friends.filter((friend) => friend.id !== friendId);\n    },\n  },\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Jost&display=swap\");\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: \"Jost\", sans-serif;\n}\n\nbody {\n  margin: 0;\n}\n\nheader {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 3rem auto;\n  border-radius: 10px;\n  padding: 1rem;\n  background-color: #58004d;\n  color: white;\n  text-align: center;\n  width: 90%;\n  max-width: 40rem;\n}\n\n#app ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n#app li,\n#app form {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 1rem auto;\n  border-radius: 10px;\n  padding: 1rem;\n  text-align: center;\n  width: 90%;\n  max-width: 40rem;\n}\n\n#app h2 {\n  font-size: 2rem;\n  border-bottom: 4px solid #ccc;\n  color: #58004d;\n  margin: 0 0 1rem 0;\n}\n\n#app button {\n  font: inherit;\n  cursor: pointer;\n  border: 1px solid #4c353f;\n  background-color: #dd71a3;\n  color: white;\n  padding: 0.05rem 1rem;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.26);\n}\n\n#app button:hover,\n#app button:active {\n  background-color: #ec3169;\n  border-color: #ec3169;\n  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.26);\n}\n\n#app input {\n  font: inherit;\n  padding: 0.15rem;\n}\n#app label {\n  font-weight: bold;\n  margin-right: 1rem;\n  width: 7rem;\n  display: inline-block;\n}\n#app form div {\n  margin: 1rem 0;\n}\n</style>"],"mappings":";;8BAEIA,mBAAA,CAAoC,iB,aAA5BA,mBAAA,CAAmB,YAAf,YAAU,E;;;;;uBADxBC,mBAAA,CAiBU,kBAhBRC,UAAoC,EACpCC,YAAA,CAAmDC,qBAAA;IAAtCC,YAAW,EAAEC,QAAA,CAAAC;EAAU,2CACpCP,mBAAA,CAaK,c,kBAZHC,mBAAA,CAWiBO,SAAA,QAAAC,WAAA,CAVEC,KAAA,CAAAC,OAAO,YAAjBC,MAAM;yBADfC,YAAA,CAWiBC,yBAAA;MATdC,GAAG,EAAEH,MAAM,CAACI,EAAE;MACdA,EAAE,EAAEJ,MAAM,CAACI,EAAE;MACbC,IAAI,EAAEL,MAAM,CAACK,IAAI;MACjB,cAAY,EAAEL,MAAM,CAACM,KAAK;MAC1B,eAAa,EAAEN,MAAM,CAACO,KAAK;MACrB,aAAW,EAAEP,MAAM,CAACQ,UAAU;MACpCC,gBAAe,EAAEf,QAAA,CAAAgB,oBAAoB;MACrCC,QAAM,EAAEjB,QAAA,CAAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}