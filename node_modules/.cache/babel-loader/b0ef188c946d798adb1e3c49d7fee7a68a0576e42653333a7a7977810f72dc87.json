{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.date.to-iso-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.filter.js\";\nexport default {\n  data: function data() {\n    return {\n      friends: [{\n        id: \"manuel\",\n        name: \"Manuel Lorens\",\n        phone: \"0123 456 789\",\n        email: \"manuel@gmail.com\",\n        isFavorite: true\n      }, {\n        id: \"julia\",\n        name: \"Julia Johns\",\n        phone: \"0123 666 991\",\n        email: \"julia@gmail.com\",\n        isFavorite: false\n      }, {\n        id: \"Iva\",\n        name: \"Iva Serg\",\n        phone: \"0123 666 666\",\n        email: \"iva@gmail.com\",\n        isFavorite: false\n      }]\n    };\n  },\n  methods: {\n    toggleFavoriteStatus: function toggleFavoriteStatus(friendId) {\n      var identifiedFriend = this.friends.find(function (friend) {\n        return friend.id === friendId;\n      });\n      identifiedFriend.isFavorite = !identifiedFriend.isFavorite;\n    },\n    addContact: function addContact(name, phone, email) {\n      var newFriendContact = {\n        id: new Date().toISOString(),\n        name: name,\n        phone: phone,\n        email: email,\n        isFavorite: false\n      };\n      this.friends.push(newFriendContact);\n    },\n    deleteContact: function deleteContact(friendId) {\n      this.friends = this.friends.filter(function (friend) {\n        return friend.id !== friendId;\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","friends","id","name","phone","email","isFavorite","methods","toggleFavoriteStatus","friendId","identifiedFriend","find","friend","addContact","newFriendContact","Date","toISOString","push","deleteContact","filter"],"sources":["/Users/ivanka/projects/list-of-friends/src/App.vue"],"sourcesContent":["<template>\n  <section>\n    <header><h1>My Friends</h1></header>\n    <new-friend @add-contact=\"addContact\"></new-friend>\n    <ul>\n      <friend-contact\n        v-for=\"friend in friends\"\n        :key=\"friend.id\"\n        :id=\"friend.id\"\n        :name=\"friend.name\"\n        :phone-number=\"friend.phone\"\n        :email-address=\"friend.email\"\n        v-bind:is-favorite=\"friend.isFavorite\"\n        @toggle-favorite=\"toggleFavoriteStatus\"\n        @delete=\"deleteContact\"\n      >\n      </friend-contact>\n    </ul>\n  </section>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      friends: [\n        {\n          id: \"manuel\",\n          name: \"Manuel Lorens\",\n          phone: \"0123 456 789\",\n          email: \"manuel@gmail.com\",\n          isFavorite: true,\n        },\n        {\n          id: \"julia\",\n          name: \"Julia Johns\",\n          phone: \"0123 666 991\",\n          email: \"julia@gmail.com\",\n          isFavorite: false,\n        },\n        {\n          id: \"Iva\",\n          name: \"Iva Serg\",\n          phone: \"0123 666 666\",\n          email: \"iva@gmail.com\",\n          isFavorite: false,\n        },\n      ],\n    };\n  },\n  methods: {\n    toggleFavoriteStatus(friendId) {\n      const identifiedFriend = this.friends.find(\n        (friend) => friend.id === friendId\n      );\n      identifiedFriend.isFavorite = !identifiedFriend.isFavorite;\n    },\n    addContact(name, phone, email) {\n      const newFriendContact = {\n        id: new Date().toISOString(),\n        name: name,\n        phone: phone,\n        email: email,\n        isFavorite: false,\n      };\n      this.friends.push(newFriendContact);\n    },\n    deleteContact(friendId) {\n      this.friends = this.friends.filter((friend) => friend.id !== friendId);\n    },\n  },\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Jost&display=swap\");\n\n* {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: \"Jost\", sans-serif;\n}\n\nbody {\n  margin: 0;\n}\n\nheader {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 3rem auto;\n  border-radius: 10px;\n  padding: 1rem;\n  background-color: #58004d;\n  color: white;\n  text-align: center;\n  width: 90%;\n  max-width: 40rem;\n}\n\n#app ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n\n#app li,\n#app form {\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\n  margin: 1rem auto;\n  border-radius: 10px;\n  padding: 1rem;\n  text-align: center;\n  width: 90%;\n  max-width: 40rem;\n}\n\n#app h2 {\n  font-size: 2rem;\n  border-bottom: 4px solid #ccc;\n  color: #58004d;\n  margin: 0 0 1rem 0;\n}\n\n#app button {\n  font: inherit;\n  cursor: pointer;\n  border: 1px solid #4c353f;\n  background-color: #b95785;\n  color: white;\n  padding: 0.05rem 1rem;\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.26);\n}\n\n#app button:hover,\n#app button:active {\n  background-color: #ec3169;\n  border-color: #ec3169;\n  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.26);\n}\n\n#app input {\n  font: inherit;\n  padding: 0.15rem;\n}\n#app label {\n  font-weight: bold;\n  margin-right: 1rem;\n  width: 7rem;\n  display: inline-block;\n}\n#app form div {\n  margin: 1rem 0;\n}\n</style>"],"mappings":";;;;;;AAsBA,eAAe;EACbA,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,CACP;QACEC,EAAE,EAAE,QAAQ;QACZC,IAAI,EAAE,eAAe;QACrBC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,kBAAkB;QACzBC,UAAU,EAAE;MACd,CAAC,EACD;QACEJ,EAAE,EAAE,OAAO;QACXC,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,iBAAiB;QACxBC,UAAU,EAAE;MACd,CAAC,EACD;QACEJ,EAAE,EAAE,KAAK;QACTC,IAAI,EAAE,UAAU;QAChBC,KAAK,EAAE,cAAc;QACrBC,KAAK,EAAE,eAAe;QACtBC,UAAU,EAAE;MACd,CAAC;IAEL,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,oBAAoB,WAAAA,qBAACC,QAAQ,EAAE;MAC7B,IAAMC,gBAAe,GAAI,IAAI,CAACT,OAAO,CAACU,IAAI,CACxC,UAACC,MAAM;QAAA,OAAKA,MAAM,CAACV,EAAC,KAAMO,QAAO;MAAA,CACnC,CAAC;MACDC,gBAAgB,CAACJ,UAAS,GAAI,CAACI,gBAAgB,CAACJ,UAAU;IAC5D,CAAC;IACDO,UAAU,WAAAA,WAACV,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;MAC7B,IAAMS,gBAAe,GAAI;QACvBZ,EAAE,EAAE,IAAIa,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC5Bb,IAAI,EAAEA,IAAI;QACVC,KAAK,EAAEA,KAAK;QACZC,KAAK,EAAEA,KAAK;QACZC,UAAU,EAAE;MACd,CAAC;MACD,IAAI,CAACL,OAAO,CAACgB,IAAI,CAACH,gBAAgB,CAAC;IACrC,CAAC;IACDI,aAAa,WAAAA,cAACT,QAAQ,EAAE;MACtB,IAAI,CAACR,OAAM,GAAI,IAAI,CAACA,OAAO,CAACkB,MAAM,CAAC,UAACP,MAAM;QAAA,OAAKA,MAAM,CAACV,EAAC,KAAMO,QAAQ;MAAA,EAAC;IACxE;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}